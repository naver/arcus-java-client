2016-07-08 [version 1.9.4]
	* [Feature] bop incr/decr with initial value.
	* [Feature] CopyOnRead / CopyOnWrite to ARCUS front cache.
	* [Feature] Support replication.
	  - It can co-work with replication enabled cache cluster.
	* [Fix] Several minor mistakes in using elementFlag.
	* [Fix] Added null key checking logic to aysncSetBulk.
	* [Fix] Added arguments check logic to BulkWorker and its subclasses.
	* [Other] Followings are modified to get additional arguments.
	   - CollectionDelete, CollectionExist, SetExit
	   - CollecitionGet and its subclasses
	* [Other] Extensice code refactoring

2016-02-04 [version 1.9.3] stable
	* Add cancel message to detect the cancel cause.
	* More correct error handling in getting/creating the client_info znode.
	* Fix a bug in getting socket address after DNS reverse lookup.
	* Cancel all operations given on the memcached node that leave from cluster.
	* Calculate the length of key string after translate it to byte array.
	* Add immediate reconnect for OperationException (delay=0).
	* Apply SPY-162 patch that "Also respect nagle setting on reconnect".

2015-11-09 [version 1.9.2] stable
	* Fix a mistake in compareTo of SMGetElement and SMGetTrimKey.
	* Fix a bug in sort-merge logic when unique bkeys are requested.

2015-11-03 [version 1.9.1] unstable
	* Restore the old smget interface to ensure backward compatibility.
	  So, both(the old one and the new one added since 1.9.0) smget
	  intefaces are supported.

2015-10-26 [version 1.9.0] stable
	* Add API type on operation objects.
	* Fix some mistakes in handling command pipeline response.
	* Treat EXISTS response as failure when create a collection.
	* Fix bug in getting null element flag by hexadecimal. 
	* Return DUPLICATED_TRIMMED
	  if smget response has both DUPLICATED and TRIMMED.
	* New smget interface - refer to Changelog of arcus-memcached.
	  - Continue smget even if some bkeys of a key are trimmed in bkey range.
	    - Missed keys are returned with the cause.
		  (NOT_FOUND, UNREADABLE, OUT_OF_RANGE).
	    - Trimmed keys are returned with the last bkey before trim.
	  - Support unique smget that remove duplicate bkeys as a option.
	  - Internally enhanced sort-merge implementation.
	* Throw exception if duplicate keys exist in multiple keys operation.
	* Some minor bug fixes.

2015-07-31 [version 1.8.2] stable
	* Change ZK_CONNECT_TIMEOUT from 5 to SESSION_TIMEOUT seconds.
	* Decrease default operation timeout - 1000 => 700 ms.
	* Add OperationType in all operation classes.
	* Fix CASMutator expiration issue (SPY-69 patch)
	* Cancel all WRITING operations in setupResend()
	  if failure mode is cancel.
	* Do not reset continous timeout when operation is cancelled.
	* Add timeout ratio threshold
	* Internal code optimization and code refactoring.

2015-01-13 [version 1.8.1] stable
	* Throw AdminConnectTimeoutException
	  if connecting to arcus admin timed out.
	* Increase ZK_CONNECT_TIMEOUT (2000 => 5000 ms)

2014-12-30 [version 1.8.0] stable
	* Add asyncBopFindPositionWithGet API.
	* Optimize the performance in finding the memcached node for a key. 
	* Add "# of operations added to memcached node"
	  in operation timeout message.
	* Add arcus java user guide document.
	* Fix - parse bkey string with long type, instead of int type.

2014-05-15 
	* arcus-java-client 1.7.0 is opened. (Apache License 2.0)
